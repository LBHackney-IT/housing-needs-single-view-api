describe('AddVulnerability', () => {
  const gateway = {
    create: jest.fn(() => true)
  };

  const addVulnerability = require('../../lib/use-cases/AddVulnerability')({
    gateway
  });

  it('does add a vulnerability', async () => {
    const vulnerability = {
      customerId: 1,
      text: 'this is the text',
      user: 'joe bloggs'
    };

    const result = await addVulnerability(vulnerability);

    expect(gateway.create).toHaveBeenCalledWith(vulnerability);
    expect(result).toBe(true);
  });

  it('does not add a vulnerability if no customer id', async () => {
    const vulnerability = {
      text: 'this is the text',
      user: 'joe bloggs'
    };

    const result = await addVulnerability(vulnerability);
    expect(result).toBe(false);
  });

  it('does not add a vulnerability if no text', async () => {
    const vulnerability = {
      customerId: 1,
      text: '',
      user: 'joe bloggs'
    };

    const result = await addVulnerability(vulnerability);
    expect(result).toBe(false);
  });

  it('does not add a vulnerability if no user', async () => {
    const vulnerability = {
      customerId: 1,
      text: 'this is the text',
      user: ''
    };

    const result = await addVulnerability(vulnerability);
    expect(result).toBe(false);
  });
});
