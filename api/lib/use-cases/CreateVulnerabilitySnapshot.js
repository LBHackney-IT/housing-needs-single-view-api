const parseDob = dob => {
  try {
    const d = dob.slice(0, 10).split('-');
    return { year: d[0], month: d[1], day: d[2] };
  } catch (err) {
    return {};
  }
};

module.exports = ({ fetchRecords, vulnerabilities }) => {
  return async ({ customerId, token }) => {
    const record = await fetchRecords(customerId);

    if (!record) {
      throw new Error('Unable to create vulnerability, unknown customer');
    }

    const systemIds = [].concat.apply(
      [customerId],
      Object.values(record.systemIds)
    );

    const snapshot = await vulnerabilities.create({
      customer: {
        dob: record.dob && record.dob.length > 0 ? parseDob(record.dob[0]) : {},
        firstName: record.name[0].first,
        lastName: record.name[0].last,
        systemIds
      },
      token
    });

    return snapshot;
  };
};
